{"version":3,"sources":["actions/typesAction.js","reducers/initialState.js","reducers/index.js","reducers/cartReducer.js","store/store.js","components/MapComponent/MapComponent.js","App.js","index.js"],"names":["ADD_ITEM","DELETE_ITEM","initialState","numOfItems","allReducers","combineReducers","cartCounter","state","action","type","console","log","store","createStore","MapComponent","mapElement","useRef","useState","longitude","setLongitude","latitude","setLatitude","map","setMap","converToPoints","lngLat","point","lat","lng","useEffect","origin","destinations","tt","key","container","current","stylesVisibility","trafficIncidents","trafficFlow","center","zoom","popup","Popup","offset","bottom","setHTML","element","document","createElement","className","marker","Marker","draggable","setLngLat","addTo","on","getLngLat","setPopup","togglePopup","addMarker","reCalculateRoutes","locations","callParameters","destination","origins","Promise","resolve","reject","ttapi","services","matrixRouting","then","matrixAPIResults","resultsArray","matrix","result","index","location","drivingtime","response","routeSummary","travelTimeInSeconds","sort","a","b","sortedLocations","sortDestinations","sortedDestinations","unshift","calculateRoute","routeData","geoJSON","toGeoJson","getLayer","removeLayer","removeSource","addLayer","id","source","data","paint","e","push","addDeliveryMarker","remove","ref","placeholder","onChange","target","value","App","rootElement","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.ae2e2bb7.chunk.js","sourcesContent":["export const ADD_ITEM = \"ADD_ITEM\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\n","const initialState = {\n  numOfItems: 0\n};\n\nexport default initialState;\n","import { combineReducers } from \"redux\";\nimport cartReducer from \"./cartReducer\";\n\nconst allReducers = combineReducers({\n  cartCounter: cartReducer\n});\n\nexport default allReducers;\n","import { ADD_ITEM, DELETE_ITEM } from \"../actions/typesAction\";\nimport initialState from \"./initialState\";\n\nexport default function cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_ITEM: {\n      console.log(state.numOfItems + 1);\n      return {\n        ...state,\n        numOfItems: state.numOfItems + 1\n      };\n    }\n\n    case DELETE_ITEM:\n      return {\n        ...state,\n        numOfItems: state.numOfItems - 1\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore } from \"redux\";\nimport allReducers from \"../reducers\";\n\nconst store = createStore(allReducers);\n\nexport default store;\n","import \"@tomtom-international/web-sdk-maps/dist/maps.css\";\nimport tt from \"@tomtom-international/web-sdk-maps\";\nimport ttapi from \"@tomtom-international/web-sdk-services\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./styles.css\";\n\nconst MapComponent = () => {\n  const mapElement = useRef();\n  const [longitude, setLongitude] = useState(-0.22);\n  const [latitude, setLatitude] = useState(51.2);\n  const [map, setMap] = useState({});\n\n  const converToPoints = (lngLat) => {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng,\n      },\n    };\n  };\n\n  const drawRoute = (geoJSON, map) => {\n    if (map.getLayer(\"route\")) {\n      map.removeLayer(\"route\");\n      map.removeSource(\"route\");\n    }\n\n    console.log(map);\n\n    map.addLayer({\n      id: \"route\",\n      type: \"line\",\n      source: {\n        type: \"geoJson\",\n        data: geoJSON,\n      },\n      paint: {\n        \"line-color\": \"#4a90e2\",\n        \"line-width\": 6,\n      },\n    });\n  };\n\n  const addDeliveryMarker = (lngLat, map) => {\n    const element = document.createElement(\"div\");\n    element.className = \"marker\";\n    new tt.Marker({\n      element: element,\n    })\n      .setLngLat(lngLat)\n      .addTo(map);\n  };\n  useEffect(() => {\n    const origin = {\n      lng: longitude,\n      lat: latitude,\n    };\n\n    let destinations = [];\n\n    let map = tt.map({\n      key: \"8LwBzLiXVxbsArt800KkbAiK5mT6O3hg\",\n      container: mapElement.current,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true,\n      },\n      center: [longitude, latitude],\n      zoom: 8,\n    });\n\n    setMap(map);\n\n    const addMarker = () => {\n      const popupOffset = {\n        bottom: [0, -25],\n      };\n      const popup = new tt.Popup({\n        offset: popupOffset,\n      }).setHTML(\"This is a stop\");\n      const element = document.createElement(\"div\");\n      element.className = \"marker\";\n      const marker = new tt.Marker({\n        draggable: true,\n        element: element,\n      })\n        .setLngLat([longitude, latitude])\n        .addTo(map);\n\n      marker.on(\"dragend\", () => {\n        const lngLat = marker.getLngLat();\n        setLongitude(lngLat.lng);\n        setLatitude(lngLat.lat);\n      });\n\n      marker.setPopup(popup).togglePopup();\n    };\n\n    addMarker();\n\n    const sortDestinations = (locations) => {\n      const pointsForDestinations = locations.map((destination) => {\n        return converToPoints(destination);\n      });\n\n      const callParameters = {\n        key: \"8LwBzLiXVxbsArt800KkbAiK5mT6O3hg\",\n        destinations: pointsForDestinations,\n        origins: [converToPoints(origin)],\n      };\n\n      return new Promise((resolve, reject) => {\n        ttapi.services\n          .matrixRouting(callParameters)\n          .then((matrixAPIResults) => {\n            const results = matrixAPIResults.matrix[0];\n            const resultsArray = results.map((result, index) => {\n              return {\n                location: locations[index],\n                drivingtime: result.response.routeSummary.travelTimeInSeconds,\n              };\n            });\n            resultsArray.sort((a, b) => {\n              return a.drivingtime - b.drivingtime;\n            });\n            const sortedLocations = resultsArray.map((result) => {\n              return result.location;\n            });\n            resolve(sortedLocations);\n          });\n      });\n    };\n\n    const reCalculateRoutes = () => {\n      sortDestinations(destinations).then((sortedDestinations) => {\n        sortedDestinations.unshift(origin);\n\n        ttapi.services\n          .calculateRoute({\n            key: \"8LwBzLiXVxbsArt800KkbAiK5mT6O3hg\",\n            locations: sortedDestinations,\n          })\n          .then((routeData) => {\n            const geoJSON = routeData.toGeoJson();\n            if (map.getLayer(\"route\")) {\n              map.removeLayer(\"route\");\n              map.removeSource(\"route\");\n            }\n            map.addLayer({\n              id: \"route\",\n              type: \"line\",\n              source: {\n                type: \"geojson\",\n                data: geoJSON,\n              },\n              paint: {\n                \"line-color\": \"#4a90e2\",\n                \"line-width\": 3,\n              },\n            });\n          });\n      });\n    };\n\n    map.on(\"click\", (e) => {\n      destinations.push(e.lngLat);\n      addDeliveryMarker(e.lngLat, map);\n      reCalculateRoutes();\n    });\n\n    return () => map.remove();\n  }, [longitude, latitude]);\n\n  return (\n    <>\n      {map && (\n        <div className=\"map-container\">\n          <div ref={mapElement} className=\"mapDiv\"></div>\n          <div className=\"search-bar\">\n            <h1>Where to?</h1>\n            <input\n              type=\"text\"\n              id=\"longitude\"\n              className=\"longitude\"\n              placeholder=\"Put in longitude\"\n              onChange={(e) => setLongitude(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              id=\"latitude\"\n              className=\"latitude\"\n              placeholder=\"Put in latitude\"\n              onChange={(e) => setLatitude(e.target.value)}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MapComponent;\n","import { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport Cart from \"./components/cartComponent\";\nimport MapComponent from \"./components/MapComponent/MapComponent\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <div className=\"header\">Route Navigator</div>\n        <MapComponent />\n      </div>\n    </Provider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}