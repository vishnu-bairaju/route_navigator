{"version":3,"sources":["actions/routeTypes.js","reducers/initialState.js","reducers/index.js","reducers/routeReducer.js","store/store.js","components/Accordion/AccordionComponent.js","components/StopComponent/StopComponent.js","actions/indexAction.js","actions/routeAction.js","components/CreateRoute/CreateRouteComponent.js","components/EditComponent/EditComponent.js","components/ViewComponent/ViewComponent.js","utils/utils.js","components/MapComponent/MapComponent.js","App.js","index.js"],"names":["CREATE_ROUTE","DELETE_ROUTE","EDIT_ROUTE","initialState","routes","allReducers","combineReducers","routeReducer","state","action","updateRoutes","routesList","targetRoute","updatedRoutesList","forEach","route","id","push","editRoute","updatedRoutes","isRoutePresent","routeData","payload","type","console","log","updatedState","updatedRoutesData","updatedRouteData","store","createStore","Accordion","children","useState","isOpen","setIsOpen","className","onClick","prev","StopComponent","setStops","index","setStopDetailList","stop","stopDetailList","setActualStops","setIsNewStopRequested","isNewStopRequested","isNewStop","lat","setLat","lng","setLng","stopName","setStopName","value","onChange","e","target","addedToRoute","name","latitude","longitude","removedStop","updatedStopsList","currstop","handleRemoveStopClick","prevList","preventDefault","allActions","routeAction","createRoute","deleteRoute","CreateRouteComponent","uniqueId","stops","setUniqueId","isEdit","EditRoute","setIsEdit","routeName","setRouteName","routeDirection","direction","setDirection","routeStatus","status","setStatus","Date","getTime","stopUniqueId","setStopUniqueId","dispatch","useDispatch","useEffect","length","map","currStop","routeToBeStored","EditComponent","ViewComponent","clickViewHandler","class","handleEditClick","handleDeleteClick","modifyRouteDataToExport","updatedData","JSON","stringify","headers","label","key","MapComponent","actualStops","setRoute","setTargetRoute","mapElement","useRef","setMap","setAction","useSelector","isDataExportable","setIsDataExportable","converToPoints","lngLat","point","addDeliveryMarker","element","document","createElement","tt","Marker","setLngLat","addTo","addNewMarkerAndPlotRoute","stopsList","origin","destinations","reCalculateRoutes","locations","callParameters","destination","origins","Promise","resolve","reject","ttapi","services","matrixRouting","then","matrixAPIResults","resultsArray","matrix","result","location","drivingtime","response","routeSummary","travelTimeInSeconds","sort","a","b","sortedLocations","sortDestinations","sortedDestinations","unshift","calculateRoute","geoJSON","toGeoJson","getLayer","removeLayer","removeSource","addLayer","source","data","paint","LngLat","Number","csvReport","filename","centerLng","centerLat","container","current","stylesVisibility","trafficIncidents","trafficFlow","center","zoom","remove","clickHandler","actionType","ref","App","rootElement","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.a9bd7a34.chunk.js","sourcesContent":["export const CREATE_ROUTE = \"CREATE_ROUTE\";\nexport const DELETE_ROUTE = \"DELETE_ROUTE\";\nexport const EDIT_ROUTE = \"EDIT_ROUTE\";\n","const initialState = {\n  routes: []\n};\n\nexport default initialState;\n","import { combineReducers } from \"redux\";\nimport routeReducer from \"./routeReducer\";\n\nconst allReducers = combineReducers({\n  routeReducer: routeReducer,\n});\n\nexport default allReducers;\n","import { CREATE_ROUTE, DELETE_ROUTE, EDIT_ROUTE } from \"../actions/routeTypes\";\nimport initialState from \"./initialState\";\n\nexport default function routeReducer(state = initialState, action) {\n  const updateRoutes = (routesList, targetRoute) => {\n    let updatedRoutesList = [];\n    routesList.forEach((route) => {\n      if (!(route.id === targetRoute.id)) {\n        updatedRoutesList.push(route);\n      }\n    });\n    return updatedRoutesList;\n  };\n  const editRoute = (routesList, targetRoute) => {\n    let updatedRoutes = [];\n    routesList.forEach((route) => {\n      if (route.id === targetRoute.id) {\n        updatedRoutes.push(targetRoute);\n      } else {\n        updatedRoutes.push(route);\n      }\n    });\n    return updatedRoutes;\n  };\n  let isRoutePresent = false;\n  state.routes.forEach((routeData) => {\n    if (routeData.id === action.payload.id) isRoutePresent = true;\n  });\n  switch (action.type) {\n    case CREATE_ROUTE: {\n      console.log(state.routes);\n      let updatedState = state;\n      if (!isRoutePresent) {\n        updatedState = {\n          routes: [...state.routes, action.payload],\n        };\n      }\n      return updatedState;\n    }\n\n    case EDIT_ROUTE: {\n      let updatedRoutesData = editRoute(state.routes, action.payload);\n      return { routes: [...updatedRoutesData] };\n    }\n\n    case DELETE_ROUTE: {\n      let updatedRouteData = updateRoutes(state.routes, action.payload);\n      return { routes: [...updatedRouteData] };\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore } from \"redux\";\nimport allReducers from \"../reducers\";\n\nconst store = createStore(allReducers);\n\nexport default store;\n","import { useState } from \"react\";\nimport \"./styles.css\";\n\nconst Accordion = ({ children }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const clickHandler = () => {\n    setIsOpen((prev) => !prev);\n  };\n  return (\n    <>\n      <div className=\"accordion-wrapper\">\n        <div className=\"accordion-header\" onClick={clickHandler}>\n          <div className=\"stop-header\">Stop Header</div>\n        </div>\n        <div className={`accordion-content ${isOpen ? \"show\" : \"\"}`}>\n          {children}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Accordion;\n","import { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\nconst StopComponent = ({\n  setStops,\n  index,\n  setStopDetailList,\n  stop,\n  stopDetailList,\n  setActualStops,\n  setIsNewStopRequested,\n  isNewStopRequested,\n  isNewStop,\n}) => {\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [stopName, setStopName] = useState(\"\");\n  const [isStopAdded, setIsStopAdded] = useState(false);\n\n  const handleOnSubmit = (e) => {\n    let stop = {\n      id: \"STOP-\" + index,\n      name: stopName,\n      longitude: lng,\n      latitude: lat,\n      addedToRoute: true,\n    };\n    setStopDetailList((prevList) => {\n      prevList.push(stop);\n      return prevList;\n    });\n    setActualStops((prev) => prev + 1);\n    setIsNewStopRequested((prev) => !prev);\n    // setIsStopAdded((prev) => !prev);\n    e.preventDefault();\n  };\n\n  const handleNameFocusOut = (e) => {\n    setStopName(e.target.value);\n  };\n\n  const handleLatFocusOut = (e) => {\n    setLat(e.target.value);\n  };\n\n  const handleLngFocusOut = (e) => {\n    setLng(e.target.value);\n  };\n\n  const handleRemoveStopClick = (removedStop) => {\n    setStops((prev) => prev - 1);\n    if (!isNewStopRequested && removedStop && removedStop.addedToRoute) {\n      let updatedStopsList = [];\n      stopDetailList.forEach((currstop, index) => {\n        if (!(currstop.id === removedStop.id)) {\n          updatedStopsList.push(currstop);\n        }\n      });\n      setStopDetailList(updatedStopsList);\n      setActualStops((prev) => prev - 1);\n    } else {\n      setIsNewStopRequested((isNewStopRequested) => !isNewStopRequested);\n    }\n  };\n\n  // useEffect(() => {\n  //   if (isNewStopRequested) {\n  //     handleNameFocusOut();\n  //     handleLatFocusOut();\n  //     handleLngFocusOut();\n  //   }\n  // }, isNewStopRequested);\n\n  console.log(\"rendered-stop - \", stop);\n\n  return (\n    <form className=\"field-form\">\n      <div className=\"field\">\n        <label className=\"field-label\">Stop Id</label>\n        <input value={stop ? stop.id : \"STOP-\" + index} />\n      </div>\n      <div className=\"field\">\n        <label className=\"field-label\">Stop Name</label>\n        <input\n          onChange={handleNameFocusOut}\n          value={stop && stop.addedToRoute && stop.name}\n        />\n      </div>\n      <div className=\"field\">\n        <label className=\"field-label\">Latitude</label>\n        <input\n          onChange={handleLatFocusOut}\n          value={stop && stop.addedToRoute && stop.latitude}\n        />\n      </div>\n      <div className=\"field\">\n        <label className=\"field-label\">Longitude</label>\n        <input\n          onChange={handleLngFocusOut}\n          value={!isNewStop ? stop.longitude : lng}\n        />\n      </div>\n      <div className=\"btn-container\">\n        <div onClick={() => handleRemoveStopClick(stop)} className=\"btn\">\n          remove\n        </div>\n        <div\n          onClick={handleOnSubmit}\n          className={stop && stop.addedToRoute ? \"hide\" : \"btn\"}\n        >\n          Add\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default StopComponent;\n","import routeAction from \"./routeAction\";\n\nconst allActions = {\n  routeAction,\n};\n\nexport default allActions;\n","import { CREATE_ROUTE, EDIT_ROUTE, DELETE_ROUTE } from \"./routeTypes\";\n\nconst createRoute = (route) => {\n  console.log(\"Create Route\", route);\n  return {\n    type: CREATE_ROUTE,\n    payload: route,\n  };\n};\n\nconst editRoute = (route) => {\n    console.log(\"Edit Route\", route);\n  return {\n    type: EDIT_ROUTE,\n    payload: route,\n  };\n}\n\nconst deleteRoute = (route) => {\n  return {\n    type: DELETE_ROUTE,\n    payload: route,\n  };\n};\n\nexport default { createRoute, editRoute, deleteRoute };\n","import { useState, useEffect } from \"react\";\nimport Accordion from \"../Accordion/AccordionComponent\";\nimport StopComponent from \"../StopComponent/StopComponent\";\nimport allActions from \"../../actions/indexAction\";\nimport \"./styles.css\";\nimport { useDispatch } from \"react-redux\";\n\nconst CreateRouteComponent = ({\n  action,\n  uniqueId,\n  stops,\n  setStopDetailList,\n  setStops,\n  stopDetailList,\n  setActualStops,\n  setUniqueId,\n  routes,\n  isEdit,\n  EditRoute,\n  setIsEdit,\n}) => {\n  const [isNewStopRequested, setIsNewStopRequested] = useState(false);\n  const [routeName, setRouteName] = useState(\n    (EditRoute && EditRoute.name) || \"\"\n  );\n  const [direction, setDirection] = useState(\n    (EditRoute && EditRoute.routeDirection) || \"Up\"\n  );\n  const [status, setStatus] = useState(\n    (EditRoute && EditRoute.routeStatus) || \"active\"\n  );\n  const [stopUniqueId, setStopUniqueId] = useState(new Date().getTime());\n\n  const dispatch = useDispatch();\n  const handleAddStopsClick = () => {\n    setStops((prev) => prev + 1);\n    setIsNewStopRequested((prev) => !prev);\n    setStopUniqueId(new Date().getTime());\n  };\n\n  const handleNameChange = (e) => {\n    setRouteName(e.target.value);\n  };\n\n  const handleDirectionChange = (e) => {\n    setDirection(e.target.value);\n  };\n\n  const handleStatusChange = (e) => {\n    setStatus(e.target.value);\n  };\n\n  const handleRouteSubmit = () => {\n    console.log({\n      id: isEdit ? EditRoute && EditRoute.id : uniqueId,\n      name: routeName,\n      routeDirection: direction,\n      routeStatus: status,\n      stops: stopDetailList,\n    });\n    let routeToBeStored = {\n      id: isEdit ? EditRoute && EditRoute.id : uniqueId,\n      name: routeName,\n      routeDirection: direction,\n      routeStatus: status,\n      stops: stopDetailList,\n    };\n    // setRoute(routeToBeStored);\n    if (isEdit) {\n      dispatch(allActions.routeAction.editRoute(routeToBeStored));\n    } else {\n      dispatch(allActions.routeAction.createRoute(routeToBeStored));\n    }\n    setStopDetailList([]);\n    setStops(0);\n    setActualStops(0);\n    setRouteName(\"\");\n    setDirection(\"\");\n    setStatus(\"active\");\n    setUniqueId(new Date().getTime());\n    setIsEdit && setIsEdit((prev) => !prev);\n  };\n\n  console.log(\"store routelist\", routes);\n\n  useEffect(() => {\n    if (EditRoute) setStopDetailList(EditRoute.stops);\n    else setStopDetailList([])\n  }, [!!(isEdit)]);\n\n  console.log(\"stop details\", stopDetailList);\n\n  return (\n    <div\n      className={`form-wrapper ${action === \"create\" || isEdit ? \"\" : \"hide\"}`}\n    >\n      <div className=\"field-form\">\n        <fieldset>\n          <div className=\"field\">\n            <label className=\"field-label\">Name</label>\n            <input onChange={handleNameChange} value={routeName} />\n          </div>\n          <div className=\"field\">\n            <label className=\"field-label\">Direction</label>\n            <select\n              id=\"direction\"\n              className=\"direction\"\n              onChange={handleDirectionChange}\n              value={direction}\n            >\n              <option value=\"Up\">Up</option>\n              <option value=\"Down\">Down</option>\n            </select>\n          </div>\n          <div className=\"field\">\n            <label className=\"field-label\">Route Id</label>\n            <input value={isEdit ? EditRoute && EditRoute.id : uniqueId} />\n          </div>\n          <div className=\"field\">\n            <label className=\"field-label\">Status</label>\n            <select\n              id=\"status\"\n              className=\"status\"\n              onChange={handleStatusChange}\n              value={status}\n            >\n              <option value=\"active\">Active</option>\n              <option value=\"inactive\">Inactive</option>\n            </select>\n          </div>\n        </fieldset>\n        {!!(stopDetailList && stopDetailList.length > 0) && (\n          <fieldset>\n            {stopDetailList.map((currStop, index) => {\n              return (\n                <Accordion>\n                  <StopComponent\n                    setStops={setStops}\n                    index={currStop.id}\n                    setStopDetailList={setStopDetailList}\n                    stopDetailList={stopDetailList}\n                    stop={currStop}\n                    setActualStops={setActualStops}\n                  />\n                </Accordion>\n              );\n            })}\n          </fieldset>\n        )}\n        {isNewStopRequested && (\n          <fieldset className={`${isNewStopRequested ? \"\" : \"hide\"}`}>\n            <Accordion>\n              <StopComponent\n                setStops={setStops}\n                index={stopUniqueId}\n                setStopDetailList={setStopDetailList}\n                stopDetailList={stopDetailList}\n                setActualStops={setActualStops}\n                setIsNewStopRequested={setIsNewStopRequested}\n                isNewStopRequested={isNewStopRequested}\n                isNewStop\n              />\n            </Accordion>\n          </fieldset>\n        )}\n        {/* <StopComponent /> */}\n        <div className=\"btn-container\">\n          <div\n            className={`${!isNewStopRequested ? \"btn\" : \"hide\"}`}\n            onClick={handleAddStopsClick}\n          >\n            Add Stop\n          </div>\n          <div onClick={handleRouteSubmit} className=\"btn\">\n            Submit\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateRouteComponent;\n","import CreateRouteComponent from \"../CreateRoute/CreateRouteComponent\";\nimport \"./styles.css\";\n\nconst EditComponent = ({\n  EditRoute,\n  action,\n  uniqueId,\n  stops,\n  setStops,\n  stopDetailList,\n  setStopDetailList,\n  setActualStops,\n  setUniqueId,\n  routes,\n  setIsEdit,\n}) => {\n  const handleCloseClick = () => {\n    setIsEdit((prev) => !prev);\n    setStopDetailList([]);\n  };\n  return (\n    <>\n      {EditRoute && (\n        <div className=\"edit-container\">\n          <CreateRouteComponent\n            action={action}\n            uniqueId={uniqueId}\n            stops={stops}\n            setStops={setStops}\n            stopDetailList={stopDetailList}\n            setStopDetailList={setStopDetailList}\n            setActualStops={setActualStops}\n            setUniqueId={setUniqueId}\n            routes={routes}\n            isEdit\n            EditRoute={EditRoute}\n            setIsEdit={setIsEdit}\n          />\n          <div onClick={handleCloseClick} className=\"btn\">\n            close\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default EditComponent;\n","import { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport allActions from \"../../actions/indexAction\";\nimport EditComponent from \"../EditComponent/EditComponent\";\nimport \"./styles.css\";\n\nvar dummyRoutes = [\n  {\n    id: 1673024301903,\n    name: \"r1\",\n    routeDirection: \"Up\",\n    routeStatus: \"active\",\n    stops: [\n      {\n        id: \"STOP-1673024535216\",\n        name: \"s1\",\n        longitude: \"-0.3\",\n        latitude: \"51.3\",\n        addedToRoute: true,\n      },\n      {\n        id: \"STOP-1673024558588\",\n        name: \"s2\",\n        longitude: \"-0.5\",\n        latitude: \"51.3\",\n        addedToRoute: true,\n      },\n    ],\n  },\n];\n\nconst ViewComponent = ({\n  routes,\n  clickViewHandler,\n  action,\n  uniqueId,\n  stops,\n  setStops,\n  stopDetailList,\n  setStopDetailList,\n  setActualStops,\n  setUniqueId,\n}) => {\n  const dispatch = useDispatch();\n  const [isEdit, setIsEdit] = useState(false);\n\n  const handleDeleteClick = (route) => {\n    dispatch(allActions.routeAction.deleteRoute(route));\n  };\n  const handleEditClick = (route) => {\n    clickViewHandler(route);\n    setIsEdit((prev) => !prev);\n  };\n\n  return (\n    <div className=\"view-container\">\n      {\n        <>\n          {routes.map((route) => {\n            return (\n              route && (\n                <div className=\"route-card\">\n                  <div className=\"route-details\">\n                    <div className=\"route-info\">\n                      <label className=\"title\">Route Id: </label>\n                      <div className=\"value\">{route.id}</div>\n                    </div>\n                    <div className=\"route-info\">\n                      <label className=\"title\">Route Name: </label>\n                      <div className=\"value\">{route.name}</div>\n                    </div>\n                    <div className=\"route-info\">\n                      <label className=\"title\">Route Direction: </label>\n                      <div className=\"value\">{route.routeDirection}</div>\n                    </div>\n                    <div className=\"route-info\">\n                      <label className=\"title\">Route Status: </label>\n                      <div className=\"value\">{route.routeStatus}</div>\n                    </div>\n                    <div className=\"route-info\">\n                      <label className=\"title\">No.of Stops: </label>\n                      <div className=\"value\">\n                        {route.stops && route.stops.length}\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"modify-container\">\n                    <div class=\"btn\" onClick={() => clickViewHandler(route)}>\n                      View\n                    </div>\n                    <div class=\"btn\" onClick={() => handleEditClick(route)}>\n                      Edit\n                    </div>\n                    <div class=\"btn\" onClick={() => handleDeleteClick(route)}>\n                      Delete\n                    </div>\n                  </div>\n                  {isEdit && (\n                    <EditComponent\n                      EditRoute={route}\n                      action={action}\n                      uniqueId={uniqueId}\n                      stops={stops}\n                      setStops={setStops}\n                      stopDetailList={stopDetailList}\n                      setStopDetailList={setStopDetailList}\n                      setActualStops={setActualStops}\n                      setUniqueId={setUniqueId}\n                      routes={routes}\n                      setIsEdit={setIsEdit}\n                    />\n                  )}\n                </div>\n              )\n            );\n          })}\n        </>\n      }\n    </div>\n  );\n};\n\nexport default ViewComponent;\n","export function modifyRouteDataToExport(routeData) {\n  let updatedData = [];\n  if (routeData && routeData.length > 0) {\n    routeData.forEach((route) => {\n      updatedData.push({ ...route, stops: JSON.stringify(route.stops) });\n    });\n  }\n  return updatedData;\n}\n","import \"@tomtom-international/web-sdk-maps/dist/maps.css\";\nimport tt from \"@tomtom-international/web-sdk-maps\";\nimport ttapi from \"@tomtom-international/web-sdk-services\";\nimport { useState, useEffect, useRef } from \"react\";\nimport CreateRouteComponent from \"../CreateRoute/CreateRouteComponent\";\nimport ViewComponent from \"../ViewComponent/ViewComponent\";\nimport { useSelector } from \"react-redux\";\nimport { CSVLink } from \"react-csv\";\nimport { modifyRouteDataToExport } from \"../../utils/utils\";\nimport \"./styles.css\";\n\nconst headers = [\n  { label: \"Route Id\", key: \"id\" },\n  { label: \"Route Name\", key: \"name\" },\n  { label: \"Route Direction\", key: \"routeDirection\" },\n  { label: \"Route Status\", key: \"routeStatus\" },\n  { label: \"Route Stops\", key: \"stops\" },\n];\n\nconst MapComponent = ({\n  stops,\n  setStopDetailList,\n  setStops,\n  stopDetailList,\n  actualStops,\n  setActualStops,\n  setRoute,\n  route,\n  targetRoute,\n  setTargetRoute,\n}) => {\n  const mapElement = useRef();\n  const [map, setMap] = useState({});\n  const [action, setAction] = useState(\"\");\n  const [uniqueId, setUniqueId] = useState(new Date().getTime());\n  const routes = useSelector((state) => {\n    console.log(\"State: \", state);\n    return state.routeReducer.routes;\n  });\n  const [isDataExportable, setIsDataExportable] = useState(false);\n\n  const converToPoints = (lngLat) => {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng,\n      },\n    };\n  };\n\n  const addDeliveryMarker = (lngLat, map) => {\n    const element = document.createElement(\"div\");\n    element.className = \"marker\";\n    new tt.Marker({\n      element: element,\n    })\n      .setLngLat(lngLat)\n      .addTo(map);\n  };\n\n  const addNewMarkerAndPlotRoute = (stopsList, map) => {\n    console.log(\"stops list recieved \", stopsList);\n    const origin = {\n      lng: stopsList && stopsList.length > 0 && stopsList[0].longitude,\n      lat: stopsList && stopsList.length > 0 && stopsList[0].latitude,\n    };\n\n    let destinations = [];\n\n    const sortDestinations = (locations) => {\n      const pointsForDestinations = locations.map((destination) => {\n        return converToPoints(destination);\n      });\n\n      const callParameters = {\n        key: \"8LwBzLiXVxbsArt800KkbAiK5mT6O3hg\",\n        destinations: pointsForDestinations,\n        origins: [converToPoints(origin)],\n      };\n\n      return new Promise((resolve, reject) => {\n        ttapi.services\n          .matrixRouting(callParameters)\n          .then((matrixAPIResults) => {\n            const results = matrixAPIResults.matrix[0];\n            const resultsArray = results.map((result, index) => {\n              return {\n                location: locations[index],\n                drivingtime: result.response.routeSummary.travelTimeInSeconds,\n              };\n            });\n            resultsArray.sort((a, b) => {\n              return a.drivingtime - b.drivingtime;\n            });\n            const sortedLocations = resultsArray.map((result) => {\n              return result.location;\n            });\n            resolve(sortedLocations);\n          });\n      });\n    };\n\n    const reCalculateRoutes = () => {\n      sortDestinations(destinations).then((sortedDestinations) => {\n        sortedDestinations.unshift(origin);\n\n        ttapi.services\n          .calculateRoute({\n            key: \"8LwBzLiXVxbsArt800KkbAiK5mT6O3hg\",\n            locations: sortedDestinations,\n          })\n          .then((routeData) => {\n            const geoJSON = routeData.toGeoJson();\n            if (map.getLayer(\"route\")) {\n              map.removeLayer(\"route\");\n              map.removeSource(\"route\");\n            }\n            map.addLayer({\n              id: \"route\",\n              type: \"line\",\n              source: {\n                type: \"geojson\",\n                data: geoJSON,\n              },\n              paint: {\n                \"line-color\": \"#4a90e2\",\n                \"line-width\": 3,\n              },\n            });\n          });\n      });\n    };\n\n    const addStop = () => {\n      if (stopsList && stopsList.length === 1) {\n        console.log(stopsList[0].latitude, stopsList[0].longitude);\n        addDeliveryMarker(\n          new tt.LngLat(\n            Number(stopsList[0].longitude),\n            Number(stopsList[0].latitude)\n          ),\n          map\n        );\n      } else if (stopsList && stopsList.length > 0) {\n        stopsList.forEach((stop) => {\n          destinations.push(\n            new tt.LngLat(Number(stop.longitude), Number(stop.latitude))\n          );\n          addDeliveryMarker(\n            new tt.LngLat(Number(stop.longitude), Number(stop.latitude)),\n            map\n          );\n        });\n        reCalculateRoutes();\n      }\n    };\n\n    addStop();\n  };\n\n  let csvReport = !!(routes && routes.length > 0)\n    ? {\n        data: modifyRouteDataToExport(routes),\n        headers: headers,\n        filename: \"route_navigator.csv\",\n      }\n    : {\n        data: [],\n        headers: headers,\n        filename: \"route_navigator_empty.csv\",\n      };\n\n  useEffect(() => {\n    let centerLng = 0;\n    let centerLat = 0;\n    if (!!(stopDetailList && stopDetailList.length > 0)) {\n      centerLng = stopDetailList[0].longitude;\n      centerLat = stopDetailList[0].latitude;\n    } else if (targetRoute && targetRoute.stops.length > 0) {\n      centerLng = targetRoute.stops[0].longitude;\n      centerLat = targetRoute.stops[0].latitude;\n    } else {\n      centerLng = 77.59;\n      centerLat = 12.97;\n    }\n\n    let map = tt.map({\n      key: \"8LwBzLiXVxbsArt800KkbAiK5mT6O3hg\",\n      container: mapElement.current,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true,\n      },\n      center: [centerLng, centerLat],\n      zoom: 8,\n    });\n\n    setMap(map);\n\n    if (!!(stopDetailList && stopDetailList.length > 0)) {\n      addNewMarkerAndPlotRoute(stopDetailList, map);\n    } else if (!!(targetRoute && targetRoute.stops)) {\n      addNewMarkerAndPlotRoute(targetRoute.stops, map);\n    }\n\n    return () => map.remove();\n  }, [actualStops, JSON.stringify(targetRoute)]);\n\n  const clickHandler = (actionType) => {\n    setAction(actionType);\n    if (actionType === \"create\") {\n      setUniqueId(new Date().getTime());\n    } else if (actionType === \"export\") {\n      setIsDataExportable((prev) => {\n        if (routes && routes.length > 0) return true;\n        return false;\n      });\n    }\n  };\n\n  const clickViewHandler = (route) => {\n    console.log(route);\n    setTargetRoute({ ...route });\n  };\n\n  return (\n    <>\n      {map && (\n        <div className=\"map-container\">\n          <div ref={mapElement} className=\"mapDiv\"></div>\n          <div className=\"options-bar\">\n            <div\n              onClick={() => clickHandler(\"create\")}\n              className={` btn ${action === \"create\" ? \"enabled\" : \"\"}`}\n            >\n              Create\n            </div>\n            <div\n              onClick={() => clickHandler(\"view\")}\n              className={` btn ${action === \"view\" ? \"enabled\" : \"\"}`}\n            >\n              View all Routes\n            </div>\n\n            <CSVLink\n              {...csvReport}\n              className={`btn ${action === \"export\" ? \"enabled\" : \"\"}`}\n              onClick={() => clickHandler(\"export\")}\n            >\n              <div\n              // className={`btn ${action === \"export\" ? \"enabled\" : \"\"}`}\n              // onClick={() => clickHandler(\"export\")}\n              >\n                Export all Routes\n              </div>\n            </CSVLink>\n            {/* {csvReport.length > 0 ? (\n              <CSVLink {...csvReport}>\n                <div\n                  className={`btn ${action === \"export\" ? \"enabled\" : \"\"}`}\n                  onClick={() => clickHandler(\"export\")}\n                >\n                  Export all Routes\n                </div>\n              </CSVLink>\n            ) : (\n              <div\n                className={`btn ${action === \"export\" ? \"enabled\" : \"\"}`}\n                onClick={() => clickHandler(\"export\")}\n              >\n                Export all Routes\n              </div>\n            )} */}\n          </div>\n          <div className={action === \"create\" ? \"show\" : \"hide\"}>\n            <CreateRouteComponent\n              action={action}\n              uniqueId={uniqueId}\n              stops={stops}\n              setStops={setStops}\n              stopDetailList={stopDetailList}\n              setStopDetailList={setStopDetailList}\n              setActualStops={setActualStops}\n              setUniqueId={setUniqueId}\n              routes={routes}\n            />\n          </div>\n          {!!(routes && routes.length > 0) ? (\n            <div className={action === \"view\" ? \"show\" : \"hide\"}>\n              <ViewComponent\n                routes={routes}\n                clickViewHandler={clickViewHandler}\n                action={action}\n                uniqueId={uniqueId}\n                stops={stops}\n                setStops={setStops}\n                stopDetailList={stopDetailList}\n                setStopDetailList={setStopDetailList}\n                setActualStops={setActualStops}\n                setUniqueId={setUniqueId}\n                routes={routes}\n              />\n            </div>\n          ) : (\n            action === \"view\" && <div>No Routes found!! 😕</div>\n          )}\n          {!isDataExportable ? (\n            <div className={action === \"export\" ? \"show\" : \"hide\"}>\n              No data found to export!! 😕\n            </div>\n          ) : (\n            action === \"export\" && <div>Data can be exported!! 😊</div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MapComponent;\n","import { Provider } from \"react-redux\";\nimport { useState } from \"react\";\nimport store from \"./store/store\";\nimport MapComponent from \"./components/MapComponent/MapComponent\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [stops, setStops] = useState(0);\n  const [stopDetailList, setStopDetailList] = useState([]);\n  const [actualStops, setActualStops] = useState(0);\n  const [route, setRoute] = useState({});\n  const [targetRoute, setTargetRoute] = useState();\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <div className=\"header\">Route Navigator</div>\n        <MapComponent\n          stops={stops}\n          setStops={setStops}\n          stopDetailList={stopDetailList}\n          setStopDetailList={setStopDetailList}\n          actualStops={actualStops}\n          setActualStops={setActualStops}\n          setRoute={setRoute}\n          route={route}\n          targetRoute={targetRoute}\n          setTargetRoute={setTargetRoute}\n        />\n      </div>\n    </Provider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(<App />);\n"],"sourceRoot":""}